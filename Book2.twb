<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0125.0835                               -->
<workbook original-version='18.1' source-build='2019.4.3 (20194.20.0125.0835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='201912-citibike-tripdata' inline='true' name='federated.0dw865w1s9hrnb1e4lb6t0khqc9e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Citi_Data_Final' name='textscan.01ne7e50bja9cg12j09h20je4bhe'>
            <connection class='textscan' directory='C:/Users/Jenni/UNCCDABC/Homeworks/Tableau-CitiBike' filename='Citi_Data_Final.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.01ne7e50bja9cg12j09h20je4bhe' name='Citi_Data_Final.csv' table='[Citi_Data_Final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='tripduration' ordinal='1' />
            <column datatype='datetime' name='starttime' ordinal='2' />
            <column datatype='datetime' name='stoptime' ordinal='3' />
            <column datatype='real' name='start station id' ordinal='4' />
            <column datatype='string' name='start station name' ordinal='5' />
            <column datatype='real' name='start station latitude' ordinal='6' />
            <column datatype='real' name='start station longitude' ordinal='7' />
            <column datatype='real' name='end station id' ordinal='8' />
            <column datatype='string' name='end station name' ordinal='9' />
            <column datatype='real' name='end station latitude' ordinal='10' />
            <column datatype='real' name='end station longitude' ordinal='11' />
            <column datatype='integer' name='bikeid' ordinal='12' />
            <column datatype='string' name='usertype' ordinal='13' />
            <column datatype='datetime' date-parse-format='yyyy' name='birth year' ordinal='14' />
            <column datatype='integer' name='gender' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[Citi_Data_Final.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age(Birth Year' datatype='integer' name='[Calculation_931400717287620608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;, [birth year], TODAY())' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='datetime' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='real' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='real' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gender]' derivation='Sum' name='[sum:gender:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.430647' measure-ordering='alphabetic' measure-percentage='0.569353' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:gender:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[avg:tripduration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:start station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;47 Ave &amp; Skillman Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;7 Ave &amp; Central Park South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Ave &amp; Starr Street&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 11 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Irving Ave &amp; Jefferson St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Soissons Landing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lexington Ave &amp; E 36 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Powers St &amp; Olive St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sharon St &amp; Olive St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 17 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;58th St Depot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gansevoort St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;George St &amp; Wilson Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;White St &amp; Johnson Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 St &amp; Newtown Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cedar St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Stagg St &amp; Morgan Ave&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 98 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 St &amp; Market St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S Portland Ave &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suydam St &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cadman Plaza E &amp; Johnson St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 12 St &amp; W 4 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 16 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 58 St &amp; 1 Ave (NE Corner)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frost St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bushwick Ave &amp; McKibbin St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Willoughby Ave &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 43 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 84 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leonard St &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;McKibbin St &amp; Bogart St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stanton St &amp; Norfolk St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;36 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Avenue C &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Devoe St &amp; Morgan Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jay St &amp; York St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sterling Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 45 St &amp; 6 Ave -&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 50 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wyckoff St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Division Av &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pierrepont St &amp; Monroe Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Van Brunt St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3 Ave &amp; E 95 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crown St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Driggs Ave &amp; N 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;White St &amp; Moore St&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;27 Ave &amp; 4 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 Ave &amp; Carroll St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Center Blvd &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 58 St &amp;  1 Ave (NW Corner)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;N 11 St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 64 St &amp; Thelonious Monk Circle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;40 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 81 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Handlebar @ Gowanus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 35 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeKalb Ave &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wyckoff Av &amp; Jefferson St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28 Ave &amp; 44 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dean St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lenox Ave &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S 5 Pl &amp; S 5 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Start Station Name' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Custom./Subsc.'>
      <table>
        <view>
          <datasources>
            <datasource caption='201912-citibike-tripdata' name='federated.0dw865w1s9hrnb1e4lb6t0khqc9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw865w1s9hrnb1e4lb6t0khqc9e'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]' value='-90' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:usertype:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]</rows>
        <cols>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]</cols>
      </table>
      <simple-id uuid='{7FD2DF49-1957-4953-9570-0599736EBBE0}' />
    </worksheet>
    <worksheet name='MapPopStation'>
      <table>
        <view>
          <datasources>
            <datasource caption='201912-citibike-tripdata' name='federated.0dw865w1s9hrnb1e4lb6t0khqc9e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dw865w1s9hrnb1e4lb6t0khqc9e'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:end station longitude:qk]' field-type='quantitative' max='-8214300.2126982324' min='-8257626.6329040946' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:end station latitude:qk]' field-type='quantitative' max='4985016.6226821337' min='4960921.3356821267' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d9cde2</color>
                <color>#c3acd4</color>
                <color>#ae8ec6</color>
                <color>#9b72b8</color>
                <color>#8859aa</color>
                <color>#76439c</color>
                <color>#662f8e</color>
                <color>#571e80</color>
                <color>#491072</color>
                <color>#3c0564</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:end station latitude:qk]</rows>
        <cols>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:end station longitude:qk]</cols>
      </table>
      <simple-id uuid='{E5E99507-CD7E-462A-AE57-7F78DDF23CF0}' />
    </worksheet>
    <worksheet name='Top10Monthly'>
      <table>
        <view>
          <datasources>
            <datasource caption='201912-citibike-tripdata' name='federated.0dw865w1s9hrnb1e4lb6t0khqc9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw865w1s9hrnb1e4lb6t0khqc9e'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter expression='SUM([Number of Records]) &gt;= 5000' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter from='&quot;1 Ave &amp; E 110 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Yankee Ferry Terminal&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[mn:starttime:ok]' value='201' />
            <format attr='width' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]' value='22' />
            <format attr='color' data-class='total' scope='cols' value='#ffffff' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='text-decoration' data-class='total' scope='cols' value='none' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]' value='false' />
            <format attr='text-orientation' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]' value='0' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-style' value='solid' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#499894' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]</rows>
        <cols>([federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[mn:starttime:ok] / [federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[mn:starttime:ok]</field>
                    <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[mn:starttime:ok]</field>
                  <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]</field>
                  <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1</value>
                <value>&quot;8 Ave &amp; W 31 St&quot;</value>
                <value>18873</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{2C0BA796-A58A-4ACE-ABF4-53ACEE3C7513}' />
    </worksheet>
    <worksheet name='Top10Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='201912-citibike-tripdata' name='federated.0dw865w1s9hrnb1e4lb6t0khqc9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0dw865w1s9hrnb1e4lb6t0khqc9e'>
            <column caption='Age(Birth Year' datatype='integer' name='[Calculation_931400717287620608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;, [birth year], TODAY())' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='datetime' name='[birth year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_931400717287620608]' derivation='None' name='[none:Calculation_931400717287620608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([tripduration])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;1 Ave &amp; E 110 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Yankee Ferry Terminal&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[avg:tripduration:qk]' value='#000000' />
            <format attr='auto-subtitle' class='0' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[avg:tripduration:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[avg:tripduration:qk]' scope='rows' value='Seconds' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[avg:tripduration:qk]' value='N' />
            <format attr='text-orientation' field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[avg:tripduration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[avg:tripduration:qk] + [federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk])</rows>
        <cols>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:Calculation_931400717287620608:qk]</cols>
      </table>
      <simple-id uuid='{937046EB-4FD6-43B7-94FC-E0F5A1219045}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CitiBike 2019' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='190' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='New York&apos;s Map Station - Number of Records' captured-sheet='MapPopStation' id='1' />
                  <story-point caption='Top 10 Stations - First Semester 2019' captured-sheet='Dashboard 1' id='4'>
                    <capturedDeltas>
                      <worksheet name='Top10Monthly'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{EC40050C-C8DB-47C9-B576-5714FB844246}' />
    </dashboard>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='17' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='14' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='8' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='6' type='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='52375' id='5' name='Top10Monthly' w='82300' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='52375' id='9' leg-item-layout='vert' name='Top10Monthly' pane-specification-id='10' param='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]' type='color' w='16100' x='83100' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45625' id='15' name='Custom./Subsc.' w='82300' x='800' y='53375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45625' id='18' name='Custom./Subsc.' pane-specification-id='0' param='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:usertype:nk]' type='color' w='16100' x='83100' y='53375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='52375' id='5' is-fixed='true' name='Top10Monthly' w='82300' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='52375' id='9' leg-item-layout='vert' name='Top10Monthly' pane-specification-id='10' param='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]' type='color' w='16100' x='83100' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45625' id='15' is-fixed='true' name='Custom./Subsc.' w='82300' x='800' y='53375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='45625' id='18' name='Custom./Subsc.' pane-specification-id='0' param='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:usertype:nk]' type='color' w='16100' x='83100' y='53375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AED160B4-261D-4056-99F9-AB75F4788283}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MapPopStation'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[:Measure Names]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[attr:start station name:nk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[avg:tripduration:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:birth year:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:end station latitude:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:end station longitude:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:usertype:nk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:gender:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A701F083-B4B9-4AC4-8A2B-BA8A6BDFE123}' />
    </window>
    <window class='worksheet' name='Top10Stations'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[dy:starttime:ok]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:birth year:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:end station id:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:end station name:nk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:gender:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station id:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FFACD99-D006-425D-81F4-8A4FC3A35C24}' />
    </window>
    <window class='worksheet' name='Top10Monthly'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='24'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='230'>
            <card pane-specification-id='10' param='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[dy:starttime:ok]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:birth year:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:end station id:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station id:qk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A734FA7A-464A-4CA0-AFD7-17599F3512E0}' />
    </window>
    <window class='worksheet' name='Custom./Subsc.'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:usertype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[mn:starttime:ok]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:usertype:nk]</field>
            <field>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5682FF6F-B1C8-4393-83A0-2BF5DBB55B52}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Custom./Subsc.'>
          <zoom type='entire-view' />
          <highlight field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:usertype:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top10Monthly'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[sum:Number of Records:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.0dw865w1s9hrnb1e4lb6t0khqc9e].[none:start station name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{8E407BC3-5640-45B6-95C7-0E8B1D4EFC00}' />
    </window>
    <window class='dashboard' maximized='true' name='CitiBike 2019'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{2CD18142-51F4-4153-9C00-0E1D8A8DC3E4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CitiBike 2019' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Custom./Subsc.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MapPopStation' width='192'>
      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
      bxtToWKnFA2Ot5/PY5KRozHr1hBHroeaMQYVObFTIQTJWKGUQLcglaXctGSTmMvPp8yuRtRF
      y/LZmCiRrms8grqrHJNKslvVWAPjs9TVkcBxltP/HIo6yeBnT30eyiJ6k1LybLFwreg7W5cl
      v7+56R/2kFG5KcsPljR5mwmpGacOgpyNF+hW8+L5C+5X99zf3/f8pXAi+gnvi1h8sOuTfr46
      bTabMZvN3ikRCK5RQ6s1085d9PDk+/Tl/ac2IQTYhH0laduDnPopU0Lw0cIR9LZV1WfrffG5
      1YJy01JtNVmaoyvLaJ6SjmOnH1QZZOyUpctNS1MYhOmo9lZjRItMLAhDUxr2q5qmtNy/LGgr
      4441iogzRZQ6bSIpXZ+1KJVOE9RYinVDuW1oq5Y4l8hwMIZ4tx8YfjDotmU0Gr2zqO35ZMIX
      5+dE3U5R1DX/+Po12w6L9ztB3bYfnN39PlPSULUl66LGWsN4POajjz5iuVxyeXl5xHEKfXh/
      /aEShLUHOfiwqgh44EoNjwd0Qk33VG1LEkV8eXFB8iMoWfwcLJKSz8/PKeuaVmtmWebcXiR0
      LFptHBojleh9foAoliR5hIgsUrjGGUJC2zjc3jSHHfmBTI6F+bOc0Tzh/LMxZx+PmJy7/IP/
      TFs7wpyVGhFZ8llMNo1JRjFGW8Tvf/9764M/j4l7CFBKSdz1pFVdOWJYFPMuVrUt39zcUAY7
      xseLBYuRY1s+X624/wEF7Y9ZFFVIoZnlY7TVyFYgrSKPx0eoUx7UJ4euoO9r4FEir3Dn33eK
      KuFtmOPwpo3hxWrFOE2p25ZG65/k2v8pbZQkfNYN/q9ubsiThC8vLlziytDRYA3r9ZrFYkFV
      Va6OBBfMAuSLGN0aNm8q8mlMOlG0pUW3lnSkaE3DqihYjkZgXIsll/CyPUonhGDzpqKtjEN+
      cklb2r52YHKRUte1c+9b4ZJwmXQxABxLcsOhEEVKSds0TCeT3vf3k+Nt9AdvaeQKH57f3bHu
      Vv/nXXo+i6KfZAAIoRmn0NgaQUYWJchYkciUSMRE6qEigneDwlpfzxfyCcBQ4t0P/KEUOjwu
      66ik5JPlkpfr9VvlOv5QzAe7UgjyJGE5HnM1m7n7w4HR6uOB3W7Hfr9nMpkQR8EzsLC7q9mv
      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
    </thumbnail>
    <thumbnail height='192' name='Top10Monthly' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top10Stations' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
